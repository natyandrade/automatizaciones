Devco – Travelocity: Automatización Web

Travelocity es una automatización Web para un reto Devco, donde se realizaron 15 escenarios manuales y 5 escenarios automatizados de la pagina web https://www.travelocity.com/.
El proyecto de las pruebas automatizadas se llama Travelocity y el proyecto de las pruebas automatizadas manuales se llama Travelocity_manual.

--> Tecnologías Implementadas y su respectiva version fueron:

•	Gradle 5.6.2
•	Serenity BDD 1.9.9
•	Chrome 81.0.4044.92 (64 bits)
•	Driver Chrome 81, java 1.8.0_241

--> Pasos para realizar la ejecución manual:

-	Si se desea ejecutar desde Eclipse: ir a la carpeta Runner y ejecutar cada archivo Runner, dando click derecho y seleccionar la opción RunAs, luego seleccionar la opción JUnitTest. A continuacion, el programa pregunta si los pasos son exitosos, responder si o no, según el caso y al final marcará el escenario como fallido o exitoso.

-	Si se desea ejecutar desde la terminal: ingresar a la carpeta del proyecto, ubicados ahi, ejecutar la terminal y escribir gradle build, y esperamos que descargue las dependencias y realice las ejecuciones de las pruebas.



--> Pasos para realizar la ejecución automatizada:

-	Si se desea ejecutar desde Eclipse: ir a la carpeta Runner y ejecutar cada archivo Runner, dando click derecho y seleccionar la opción RunAs, luego seleccionar la opción JUnitTest. A continuacion, el programa ejecuta cada escenario.

-	Si se desea ejecutar desde la terminal: ingresar a la carpeta del proyecto, ubicados ahi, ejecutar la terminal y escribir gradle build, y esperamos que descargue las dependencias y realice las ejecuciones de las pruebas.

-	Si se desea ejecutar desde la terminal todas las pruebas: Se ejecuta desde un IDE o Proyecto ya abierto seguir los siguientes pasos:
•	Ubicado dentro de la carpeta principal del proyecto, abrimos la terminal.
•	Abrimos el proyecto con cualquier ide y descargamos las dependencias
•	Escribimos el siguiente comando gradlew clean test aggregate, esto hace que se ejecuten todas las pruebas.
•	Esperamos que las pruebas se completen.
•	Dentro del proyecto se genera la carpeta Target con el contenido del reporte target\site\serenity\index.html.
